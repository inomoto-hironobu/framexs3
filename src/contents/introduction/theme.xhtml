<?xml version="1.0"?>
<?xml-stylesheet type="application/xml" href="../../framexs.xsl"?>
<?framexs.skeleton ../../template.ftml?>
<?framexs.properties ../../properties/single.xml?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta charset="UTF-8"/>
<title>Framexsテーマ</title>
<meta name="description" content="Framexsテーマについて解説する。"/>
<meta name="modified" content="2022-06-14"/>
</head>
<body id="main">
<article>
<p>”タイトル機能”について触れてみたいとおもう。</p>
	<p>読んで字のごとくタイトルとは、その該当するサイトをより見やすくするために切っても切れない間柄である。</p>
	<p>”タイトルとはテーマ”と論じてもいいのかもしれません。最近では、WordPressと言われるWEB作成初心者でも</p>
	<p>かんたんに扱えるアプリケーションがダウンロード出来たりもします。cocoonやSwellそして、nowmonkyと挙げれば</p>
	<p>きりがないぐらいにたくさんのテーマが開発者によって作り上げられています。そのテーマによってもしくは、テーマの</p>
	<p>カスタマイズによってより多くの洗礼されたデザインのサイトが生み出されています。いわば、テーマそしてタイトルは、</p>
	<p>閲覧者により良い情報を伝えるための伝達手段ともいえるでしょう。</p>
	<p>ローカルWebサーバーを介してサイトの見た目の調整する方法があります。</p>
<p>ローカルサーバーでつまり自身のPC内で、該当するサイトをタイトル機能を用いて微調整していくことが可能となります。</p>
	<p>その仕組みを作るのにはローカルでの準備が欠かせないものとなります。</p>
	<p>まず最初に、”今からローカルWEBサーバーで作業をしますよ！”という指示を出すのがNode.js Command Promptです。</p>
	<p>具体的には、npm install→npm run serverとコマンドすることで起動してくれます。彼が動き出さないとローカルWEBサーバーは稼働しません。</p>
	<p>そしてすべてのファイルに対してコードなどプログラミングしておくことは大前提です。</p>
	<p>次に、指令を出す司令塔の役目をはたすのが、commands.xmlというファイルです。彼無くしてそのサイトの構築は不可能です。</p>
	<p>そして、彼の指示で仕事が出来るのがfoobarやyaohata(名前は任意)にあるmain.ftmlという名のファイル達です。</p>
	<p>彼ら二人が司令塔からの指示で入れ替わり立ち代わりで仕事をこなしてくれます。</p>
	<p>べつの表現をするなら、ここに彼ら以外の違った表現者を加えることでよりバリエーションは増やすことが可能となります。</p>
	<p>ただし、変更をかけるファイルを間違えると私みたいに大変なことになるのでよく理解したうえでたくさんあるファイル達を利用して</p>
	<p>閲覧者にとって見やすいサイト造りを心がけよう。</p>
	<p>今回述べたcommands.xmlやfoobar並びにyaohataフォルダのmain.ftmlファイル以外にもfaviconファイルやimgフォルダ</p>
	<p>といったサイト作成経験のある方ならわかりますが、いろいろなファイルが点在していますので混乱しないように配置します。</p>
	<p>とくに、Node.jsCommand Prompt とmain.ftmlファイルの配置は間違えると、”NOT  FOUND”が永遠に表示され調整不可になるので要注意です。</p>
<h2>共通規格の必要性</h2>
<p>Framexsは柔軟なテンプレート機能によって開発・生産性を向上させる。<br/>
しかし、再利用性と言う点からは原始的な方法のままでは課題がある。<br/>
そこで、Framexsテーマという仕組みを作った。</p>
<h2>Framexsテーマとは</h2>
<p>Framexsテーマとは、ある特定のファイル名、ファイル配置を持った塊のことである。</p>
<p>これはある特定のディレクトリやファイルの配置、名前を統一したパッケージを作ることで共通性を高めることを祈念するものである</p>
<p>CSS、JS、画像などをWordPressやスタティックサイトなどを容易に配置できるようにする</p>
<p>WordPressのテーマ機能を参考にしているため、似通っている。</p>
<p>例えば、このサイトは<a href="https://github.com/inomoto-hironobu/yaohata">八百幡テーマ</a>を使用している。</p>
<p>テーマの利用方法は静的サイトの場合は、Git</p>
<p>/skeleton-setting.xml</p>
<p>/single.xml</p>
</article>
</body>
</html>